clear all
close all

%data_frame=readtable('/Volumes/dusom_civm-kjh60/All_Staff/21.DAS.01/21_DAS_01_DataFrame.csv','Delimiter', 'comma');
data_frame=readtable('/Volumes/dusom_civm-kjh60/All_Staff/21.DAS.01/21_DAS_01_DataFrame_2Group.csv','Delimiter', 'comma');

%f_statistic_result='/Volumes/dusom_civm-kjh60/All_Staff/21.DAS.01/F_Stat_Analysis/FeM_FeF_AirM_AirF/';
f_statistic_result='/Volumes/dusom_civm-kjh60/All_Staff/21.DAS.01/F_Stat_Analysis/2Group/';


contrast={'FA','AD','RD','MD','NQA','QA','Volume','Normalized Volume'};

[~,~,group_idx]=unique(data_frame.group,'stable');

    for m=1:max(group_idx)
        total_group(m)=sum(group_idx==m);
    end
    
    count_matrix_low=zeros(size(total_group,2),max(total_group));
    count_matrix_high=zeros(size(total_group,2),max(total_group));
    
%% Pull Most Changed From Scalar Study Statistics
for n=1:size(contrast,2)
    %Find significant regions from F-statistics Analysis
    f_stat_siginficant=readtable(strcat(f_statistic_result,'Scalar_',contrast{1,n},'_Reduced_DataTable_wPercentChangeTests.csv'));
    
    A=strcmp(contrast{1,n},'Volume');
    B=strcmp(contrast{1,n},'Normalized Volume');
            
    roi_significant=unique(f_stat_siginficant.roi); %Pull the ROI we will care about
    

%% how many significant ROI for a given contrast
    for o=1:size(roi_significant,1) 
        
    %Get Stat Sheets for each, with the roi signficant data
        for m=1:size(data_frame,1)
            Data=readtable(char(data_frame.stat_path(m)));
            if A==1
                Data_cells=regexpi(Data.Properties.VariableNames,strcat('^',lower(contrast{1,n}),'_mm3')); %For Straight Volume values
                Data_idx=~cellfun(@isempty,Data_cells);
                Compare_Data(m,1)=sum(table2array(Data([find(Data.ROI==roi_significant(o)),find(Data.ROI==roi_significant(o)+1000)],Data_idx))); %Get Actual Data
            elseif B==1
                Data_cells=regexpi(Data.Properties.VariableNames,strcat('^',lower('Volume'),'_mm3')); %For Normalized Volume values
                Data_idx=~cellfun(@isempty,Data_cells);
                total_volume=sum(table2array(Data(Data.ROI>0,Data_idx))); %all regions besides exterior!
                Compare_Data(m,1)=sum(table2array(Data([find(Data.ROI==roi_significant(o)),find(Data.ROI==roi_significant(o)+1000)],Data_idx)))/total_volume; %Get Actual Data
            else
                Data_cells=regexpi(Data.Properties.VariableNames,strcat('^',contrast{1,n},'_mean')); %For non-volume values
                Data_idx=~cellfun(@isempty,Data_cells);
                Compare_Data(m,1)=mean(table2array(Data([find(Data.ROI==roi_significant(o)),find(Data.ROI==roi_significant(o)+1000)],Data_idx))); %Get Actual Data
            end
        end
        
        %Compare Mean location for each specimen
        for m=1:max(group_idx)
            [~,Group_Order(1:total_group(m),m)]=sort(Compare_Data(group_idx==m)); %low to High order
            Group_mean(m)=mean(Compare_Data(group_idx==m)); %mean group value
        end
        
       [~,Group_Mean_Order]=sort(Group_mean); %low to High order
       
       %Smallest Term
       Runno_idx_low(n,o,:)=[Group_Mean_Order(1) Group_Order(1,Group_Mean_Order(1))];
       count_matrix_low(Group_Mean_Order(1),Group_Order(1,Group_Mean_Order(1)))=count_matrix_low(Group_Mean_Order(1),Group_Order(1,Group_Mean_Order(1)))+1;
       
       %Largest Term
       if Group_Order(end,Group_Mean_Order(end)) == 0
           Runno_idx_high(n,o,:)=[Group_Mean_Order(end) Group_Order(end-1,Group_Mean_Order(end))];
           count_matrix_high(Group_Mean_Order(end),Group_Order(end-1,Group_Mean_Order(end)))=count_matrix_high(Group_Mean_Order(end),Group_Order(end-1,Group_Mean_Order(end)))+1;
       else
           Runno_idx_high(n,o,:)=[Group_Mean_Order(end) Group_Order(end,Group_Mean_Order(end))];
           count_matrix_high(Group_Mean_Order(end),Group_Order(end,Group_Mean_Order(end)))=count_matrix_high(Group_Mean_Order(end),Group_Order(end,Group_Mean_Order(end)))+1;
       end
    end
    
    %Determine the "most change" specimen ID -- most number of most different? 
    if isempty(o) %if no regions signficant in the given contrast just move on
    elseif o==1 %if only one signficant region in the contrast;
        Runno_low_mode_idx(n,:)=squeeze(Runno_idx_low(n,1,:));
        Runno_high_mode_idx(n,:)=squeeze(Runno_idx_high(n,1,:));  
    else
        [~,~,low_idx]=unique(squeeze(Runno_idx_low(n,1:o,:)),'rows');
        Runno_low_mode_idx(n,:)=Runno_idx_low(n,find(low_idx==mode(low_idx),1),:); %per contrast basis of mode finding
        
        [~,~,high_idx]=unique(squeeze(Runno_idx_high(n,1:o,:)),'rows');
        Runno_high_mode_idx(n,:)=Runno_idx_high(n,find(high_idx==mode(high_idx),1),:); %per contrast basis of mode finding
    end
end

[r,c]=find(count_matrix_low==max(max(count_matrix_low)));

data_frame.specimen(((r-1)*)+c)
[r,c]=find(count_matrix_high==max(max(count_matrix_high)));
data_frame.specimen(((r-1)*)+c)


